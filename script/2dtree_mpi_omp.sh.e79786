/var/spool/pbs/mom_priv/jobs/79786.login.hpc.SC: line 7: [: ==: unary operator expected
loading dependency gnu/9.3.0
loading dependency numactl/2.0.13
loading dependency hwloc/2.2.0

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 25
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 26
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 27
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 28
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 29
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 30
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 31
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 32
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 33
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 34
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 35
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 36
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 37
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 38
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 39
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 40
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 41
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 42
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 43
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 44
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 45
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 46
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 47
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 48
slots that were requested by the application:

  kdtree.x

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES

libgomp: Invalid value for environment variable OMP_PLACES
